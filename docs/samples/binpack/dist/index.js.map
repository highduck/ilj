{"version":3,"file":"index.js","sources":["../../dist/esm/index.js","esm/index.js"],"sourcesContent":["/**\n Based on [RectangleBinPack](https://github.com/juj/RectangleBinPack) library.\n */\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n// precondition if 2 rectangles possible to be intersected\nfunction sat(a, b) {\n    return a.x < (b.x + b.w) && (a.x + a.w) > b.x &&\n        a.y < (b.y + b.h) && (a.y + a.h) > b.y;\n}\nfunction contains(a, b) {\n    return a.x <= b.x && a.y <= b.y &&\n        (a.x + a.w) >= (b.x + b.w) &&\n        (a.y + a.h) >= (b.y + b.h);\n}\nvar maxScore = 0xFFFFFFFF;\nfunction resetPlacement(v) {\n    v.x = v.y = v.w = v.h = 0;\n    v.A = v.B = maxScore;\n    v.matched = false;\n}\nfunction pushFreeNode(list, rect) {\n    var end = list.length;\n    for (var i = 0; i < end; ++i) {\n        var free = list[i];\n        if (sat(rect, free)) {\n            if (contains(free, rect)) {\n                return;\n            }\n            if (contains(rect, free)) {\n                list.splice(i, 1);\n                --end;\n                --i;\n            }\n        }\n    }\n    list.push(rect);\n}\nfunction splitFreeNode(list, free, used) {\n    // Test with SAT if the rectangles even intersect.\n    if (!sat(used, free)) {\n        pushFreeNode(list, free);\n        return;\n    }\n    if (used.x < free.x + free.w && used.x + used.w > free.x) {\n        // New node at the top side of the used node.\n        var freeB = free.y + free.h;\n        if (used.y > free.y && used.y < freeB) {\n            pushFreeNode(list, {\n                x: free.x,\n                y: free.y,\n                w: free.w,\n                h: used.y - free.y\n            });\n        }\n        // New node at the bottom side of the used node.\n        var usedB = used.y + used.h;\n        if (usedB < freeB) {\n            pushFreeNode(list, {\n                x: free.x,\n                y: usedB,\n                w: free.w,\n                h: freeB - usedB\n            });\n        }\n    }\n    if (used.y < free.y + free.h && used.y + used.h > free.y) {\n        // New node at the left side of the used node.\n        if (used.x > free.x && used.x < free.x + free.w) {\n            pushFreeNode(list, {\n                x: free.x,\n                y: free.y,\n                w: used.x - free.x,\n                h: free.h\n            });\n        }\n        // New node at the right side of the used node.\n        var usedR = used.x + used.w;\n        var freeR = free.x + free.w;\n        if (usedR < freeR) {\n            pushFreeNode(list, {\n                x: usedR,\n                y: free.y,\n                w: freeR - usedR,\n                h: free.h\n            });\n        }\n    }\n}\nvar MaxRects = /** @class */ (function () {\n    function MaxRects() {\n        this.x = 0;\n        this.y = 0;\n        this.w = 0;\n        this.h = 0;\n        this.free = [];\n        this.used = [];\n    }\n    MaxRects.prototype.resize = function (w, h) {\n        this.x = 0;\n        this.y = 0;\n        this.w = w;\n        this.h = h;\n    };\n    MaxRects.prototype.reset = function () {\n        this.used.length = 0;\n        this.free.length = 0;\n        this.free.push({\n            x: this.x,\n            y: this.y,\n            w: this.w,\n            h: this.h,\n        });\n    };\n    MaxRects.prototype.choose = function (best, width, height, place, allowFlip) {\n        var e_1, _a;\n        best.matched = false;\n        try {\n            for (var _b = __values(this.free), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var rc = _c.value;\n                if (rc.w >= width && rc.h >= height) {\n                    place(best, rc, width, height);\n                }\n                if (allowFlip && rc.w >= height && rc.h >= width) {\n                    place(best, rc, height, width);\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    };\n    /// Places the given rectangle into the bin.\n    MaxRects.prototype.place = function (node) {\n        var e_2, _a;\n        var nextFreeList = [];\n        try {\n            for (var _b = __values(this.free), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var rect = _c.value;\n                splitFreeNode(nextFreeList, rect, node);\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        this.free = nextFreeList;\n        this.used.push(node);\n    };\n    return MaxRects;\n}());\nfunction bottomLeft(best, rc, width, height) {\n    var top = height + rc.y;\n    if (top < best.A || (top === best.A && rc.x < best.B)) {\n        best.x = rc.x;\n        best.y = rc.y;\n        best.w = width;\n        best.h = height;\n        best.A = top;\n        best.B = rc.x;\n        best.matched = true;\n    }\n}\nfunction bestShortSideFit(best, rc, width, height) {\n    var leftoverH = rc.w - width;\n    var leftoverV = rc.h - height;\n    var shortSideFit = Math.min(leftoverH, leftoverV);\n    var longSideFit = Math.max(leftoverH, leftoverV);\n    if (shortSideFit < best.A || (shortSideFit === best.A && longSideFit < best.B)) {\n        best.x = rc.x;\n        best.y = rc.y;\n        best.w = width;\n        best.h = height;\n        best.A = shortSideFit;\n        best.B = longSideFit;\n        best.matched = true;\n    }\n}\nfunction bestLongSideFit(best, rc, width, height) {\n    var leftoverH = rc.w - width;\n    var leftoverV = rc.h - height;\n    var shortSideFit = Math.min(leftoverH, leftoverV);\n    var longSideFit = Math.max(leftoverH, leftoverV);\n    if (longSideFit < best.B || (longSideFit === best.B && shortSideFit < best.A)) {\n        best.x = rc.x;\n        best.y = rc.y;\n        best.w = width;\n        best.h = height;\n        best.A = shortSideFit;\n        best.B = longSideFit;\n        best.matched = true;\n    }\n}\nfunction bestAreaFit(best, rc, width, height) {\n    // opt: don't ABS: free rect is already bigger than {width,height}\n    var spaceX = rc.w - width;\n    var spaceY = rc.h - height;\n    var shortSideFit = Math.min(spaceX, spaceY);\n    var areaFit = rc.w * rc.h - width * height;\n    if (areaFit < best.B || (areaFit === best.B && shortSideFit < best.A)) {\n        best.x = rc.x;\n        best.y = rc.y;\n        best.w = width;\n        best.h = height;\n        best.A = shortSideFit;\n        best.B = areaFit;\n        best.matched = true;\n    }\n}\n/// Returns 0 if the two intervals i1 and i2 are disjoint, or the length of their overlap otherwise.\nfunction getCommonIntervalLength(a0, a1, b0, b1) {\n    return (a1 < b0 || b1 < a0) ? 0 : ((a1 < b1 ? a1 : b1) - (a0 > b0 ? a0 : b0));\n}\nfunction createContactPoint(maxRects) {\n    return function (best, rect, width, height) {\n        var score = maxScore;\n        var x = rect.x;\n        var y = rect.y;\n        if (x === maxRects.x || x + width === maxRects.x + maxRects.w) {\n            score -= height;\n        }\n        if (y === maxRects.y || y + height === maxRects.y + maxRects.h) {\n            score -= width;\n        }\n        var top = best.A;\n        for (var i = 0, end = maxRects.used.length; i < end && score >= top; ++i) {\n            var rc = maxRects.used[i];\n            if (rc.x === x + width || rc.x + rc.w === x) {\n                score -= getCommonIntervalLength(rc.y, rc.y + rc.h, y, y + height);\n            }\n            if (rc.y === y + height || rc.y + rc.h === y) {\n                score -= getCommonIntervalLength(rc.x, rc.x + rc.w, x, x + width);\n            }\n        }\n        if (score < top) {\n            best.x = x;\n            best.y = y;\n            best.w = width;\n            best.h = height;\n            best.A = score;\n            best.matched = true;\n        }\n    };\n}\nvar PackerState = /** @class */ (function () {\n    function PackerState(maxWidth, maxHeight) {\n        if (maxWidth === void 0) { maxWidth = 0x8000; }\n        if (maxHeight === void 0) { maxHeight = 0x8000; }\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this.maxRects = new MaxRects();\n        // current canvas size\n        this.w = 0;\n        this.h = 0;\n        this.rects = [];\n        this.flags = [];\n        this.userData = [];\n    }\n    PackerState.prototype.add = function (width, height, padding, userData) {\n        // filter empty input as well\n        if (width > 0 && height > 0) {\n            var w = Math.max(0, width + padding << 1);\n            var h = Math.max(0, height + padding << 1);\n            // filter ultra-big entries\n            if (w <= this.maxWidth && h <= this.maxHeight) {\n                this.rects.push({ x: 0, y: 0, w: w, h: h });\n                this.userData.push(userData);\n                this.flags.push(0 /* Empty */);\n                return true;\n            }\n        }\n        return false;\n    };\n    Object.defineProperty(PackerState.prototype, \"size\", {\n        get: function () {\n            return this.rects.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PackerState.prototype, \"empty\", {\n        get: function () {\n            return this.rects.length === 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PackerState.prototype.isPacked = function (i) {\n        return (this.flags[i] & 1 /* Packed */) !== 0;\n    };\n    PackerState.prototype.isRotated = function (i) {\n        return (this.flags[i] & 2 /* Rotated */) !== 0;\n    };\n    return PackerState;\n}());\nexport { PackerState };\n// // input sizes\n// // output: rects & indices to original\nfunction tryPack(maxRects, rects, flags, method, allowFlip) {\n    maxRects.reset();\n    for (var i = 0; i < flags.length; ++i) {\n        flags[i] = 0 /* Empty */;\n    }\n    var best = { x: 0, y: 0, w: 0, h: 0, A: 0, B: 0, matched: false };\n    var total = rects.length;\n    for (var j = 0; j < total; ++j) {\n        resetPlacement(best);\n        var bestIndex = -1;\n        for (var i = 0; i < total; ++i) {\n            if ((flags[i] & 1 /* Packed */) === 0) {\n                var rect_1 = rects[i];\n                maxRects.choose(best, rect_1.w, rect_1.h, method, allowFlip);\n                if (best.matched) {\n                    bestIndex = i;\n                }\n            }\n        }\n        if (bestIndex < 0) {\n            return false;\n        }\n        maxRects.place({\n            x: best.x,\n            y: best.y,\n            w: best.w,\n            h: best.h\n        });\n        var rect = rects[bestIndex];\n        rect.x = best.x;\n        rect.y = best.y;\n        flags[bestIndex] |= rect.w !== best.w ? (1 /* Packed */ | 2 /* Rotated */) : 1 /* Packed */;\n    }\n    return true;\n}\n/////////////\nvar packStartSize = 32;\nfunction getRectsArea(rects) {\n    var e_3, _a;\n    var acc = 0;\n    try {\n        for (var rects_1 = __values(rects), rects_1_1 = rects_1.next(); !rects_1_1.done; rects_1_1 = rects_1.next()) {\n            var rc = rects_1_1.value;\n            acc += rc.w * rc.h;\n        }\n    }\n    catch (e_3_1) { e_3 = { error: e_3_1 }; }\n    finally {\n        try {\n            if (rects_1_1 && !rects_1_1.done && (_a = rects_1.return)) _a.call(rects_1);\n        }\n        finally { if (e_3) throw e_3.error; }\n    }\n    return acc;\n}\nfunction nextSize(sz) {\n    var t = sz.w;\n    sz.w = sz.h << 1;\n    //sz.w = sz.h + 16;\n    sz.h = t;\n}\nfunction estimateSize(sz, area, maxWidth, maxHeight) {\n    while (area > sz.w * sz.h && (sz.h < maxHeight || sz.w < maxWidth)) {\n        nextSize(sz);\n    }\n}\nfunction tryPackState(state, method, allowFlip) {\n    var e_4, _a;\n    var rects = state.rects;\n    var flags = state.flags;\n    var maxRects = state.maxRects;\n    maxRects.resize(state.w, state.h);\n    var methods = [\n        bestAreaFit,\n        createContactPoint(maxRects),\n        bottomLeft,\n        bestLongSideFit,\n        bestShortSideFit\n    ];\n    if (method >= 1) {\n        return tryPack(maxRects, rects, flags, methods[(method - 1) % methods.length], allowFlip);\n    }\n    try {\n        for (var methods_1 = __values(methods), methods_1_1 = methods_1.next(); !methods_1_1.done; methods_1_1 = methods_1.next()) {\n            var method_1 = methods_1_1.value;\n            if (tryPack(maxRects, rects, flags, method_1, allowFlip)) {\n                return true;\n            }\n        }\n    }\n    catch (e_4_1) { e_4 = { error: e_4_1 }; }\n    finally {\n        try {\n            if (methods_1_1 && !methods_1_1.done && (_a = methods_1.return)) _a.call(methods_1);\n        }\n        finally { if (e_4) throw e_4.error; }\n    }\n    return false;\n}\nexport function packNodes(state, method, allowFlip) {\n    state.w = state.h = packStartSize;\n    estimateSize(state, getRectsArea(state.rects), state.maxWidth, state.maxHeight);\n    while (!tryPackState(state, method, allowFlip)) {\n        if (state.h >= state.maxHeight && state.w >= state.maxWidth) {\n            return false;\n        }\n        nextSize(state);\n    }\n    return true;\n}\n//# sourceMappingURL=index.js.map","import { PackerState, packNodes } from \"@highduck/binpack\";\nvar names = [\n    \"any\",\n    \"best area fit\",\n    \"contact point\",\n    \"bottom-left\",\n    \"best long-side fit\",\n    \"best short-side fit\",\n];\nvar packerStats = {\n    w: 0,\n    h: 0,\n    bw: 0,\n    bh: 0,\n    method: 0,\n    time: 0,\n    flip: true\n};\nvar packer = new PackerState();\nfor (var i = 0; i < 150; ++i) {\n    packer.add(Math.round(5 + 0.75 * i * Math.random()), Math.round(5 + 0.75 * i * Math.random()), 1, undefined);\n}\nfunction pack() {\n    var ts = performance.now();\n    // packerStats.method = 2;\n    packNodes(packer, packerStats.method, packerStats.flip);\n    packerStats.time = performance.now() - ts;\n    packerStats.w = packer.w;\n    packerStats.h = packer.h;\n    packerStats.bw = 0;\n    packerStats.bh = 0;\n    for (var i = 0; i < packer.rects.length; ++i) {\n        var rc = packer.rects[i];\n        var r = rc.x + rc.w;\n        var b = rc.y + rc.h;\n        if (packer.isRotated(i)) {\n            r = rc.x + rc.h;\n            b = rc.y + rc.w;\n        }\n        if (r > packerStats.bw) {\n            packerStats.bw = r;\n        }\n        if (b > packerStats.bh) {\n            packerStats.bh = b;\n        }\n    }\n}\npack();\nsetInterval(function () {\n    ++packerStats.method;\n    if (packerStats.method >= names.length) {\n        packerStats.method = 0;\n        packerStats.flip = !packerStats.flip;\n    }\n    pack();\n}, 1500);\nvar canvas = document.getElementById('gameview');\ncanvas.width = 2048;\ncanvas.height = 2048;\nvar dpr = window.devicePixelRatio;\ncanvas.style.width = canvas.width / dpr + \"px\";\ncanvas.style.height = canvas.height / dpr + \"px\";\nvar ctx = canvas.getContext('2d', { alpha: false });\nfunction draw() {\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.strokeStyle = '#000';\n    ctx.beginPath();\n    ctx.rect(0, 0, packer.w, packer.h);\n    ctx.closePath();\n    ctx.fillStyle = '#8B8';\n    ctx.fill();\n    ctx.stroke();\n    ctx.beginPath();\n    ctx.rect(0, 0, packerStats.bw, packerStats.bh);\n    ctx.closePath();\n    ctx.fillStyle = '#999';\n    ctx.fill();\n    var pp = 2;\n    var pp2 = pp << 1;\n    for (var idx = 0; idx < packer.rects.length; ++idx) {\n        if (packer.isPacked(idx)) {\n            var rc = packer.rects[idx];\n            if (!packer.isRotated(idx)) {\n                ctx.beginPath();\n                ctx.rect(rc.x + pp, rc.y + pp, rc.w - pp2, rc.h - pp2);\n                ctx.closePath();\n                ctx.fillStyle = '#393';\n                ctx.fill();\n                ctx.stroke();\n                ctx.beginPath();\n                ctx.moveTo(rc.x + rc.w * 0.5, rc.y);\n                ctx.lineTo(rc.x + rc.w * 0.5, rc.y + rc.h * 0.5);\n                ctx.closePath();\n                ctx.stroke();\n            }\n            else {\n                ctx.beginPath();\n                ctx.rect(rc.x + pp, rc.y + pp, rc.h - pp2, rc.w - pp2);\n                ctx.closePath();\n                ctx.fillStyle = '#993';\n                ctx.fill();\n                ctx.stroke();\n                ctx.beginPath();\n                ctx.moveTo(rc.x, rc.y + rc.w * 0.5);\n                ctx.lineTo(rc.x + rc.h * 0.5, rc.y + rc.w * 0.5);\n                ctx.closePath();\n                ctx.stroke();\n            }\n        }\n    }\n    ctx.font = 'bold 38px arial';\n    ctx.fillStyle = '#000';\n    ctx.fillText(\"Method #\" + packerStats.method + \": \" + names[packerStats.method], 10, packer.h + 40);\n    ctx.fillText(\"Allow Flip: \" + packerStats.flip, 10, packer.h + 80);\n    ctx.fillText(\"Fill: \" + 100 * packerStats.w * packerStats.h / (packerStats.bw * packerStats.bh), 10, packer.h + 120);\n    ctx.fillText(\"Time: \" + packerStats.time + \" ms\", 10, packer.h + 160);\n}\nfunction mainLoop(time) {\n    draw();\n    requestAnimationFrame(mainLoop);\n}\nmainLoop(0);\n//# sourceMappingURL=index.js.map"],"names":["__values","o","s","Symbol","iterator","m","i","call","length","next","value","done","TypeError","sat","a","b","x","w","y","h","contains","pushFreeNode","list","rect","end","free","splice","push","splitFreeNode","used","freeB","usedB","usedR","freeR","MaxRects","this","prototype","resize","reset","choose","best","width","height","place","allowFlip","e_1","_a","matched","_b","_c","rc","e_1_1","error","return","node","e_2","nextFreeList","e_2_1","bottomLeft","top","A","B","bestShortSideFit","leftoverH","leftoverV","shortSideFit","Math","min","longSideFit","max","bestLongSideFit","bestAreaFit","spaceX","spaceY","areaFit","getCommonIntervalLength","a0","a1","b0","b1","createContactPoint","maxRects","score","PackerState","maxWidth","maxHeight","rects","flags","userData","add","padding","Object","defineProperty","get","enumerable","configurable","isPacked","isRotated","tryPack","method","v","total","j","bestIndex","rect_1","nextSize","sz","t","tryPackState","state","e_4","methods","methods_1","methods_1_1","e_4_1","packNodes","area","estimateSize","e_3","acc","rects_1","rects_1_1","e_3_1","getRectsArea","names","packerStats","bw","bh","time","flip","packer","round","random","undefined","pack","ts","performance","now","r","setInterval","canvas","document","getElementById","dpr","window","devicePixelRatio","style","ctx","getContext","alpha","mainLoop","clearRect","strokeStyle","beginPath","closePath","fillStyle","fill","stroke","idx","pp","moveTo","lineTo","font","fillText","draw","requestAnimationFrame"],"mappings":"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"}